
package com.hacom.ussdmxaprovisionamiento.xml;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * Provisioning Service
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ProvisioningService", targetNamespace = "http://www.example.com/provisioning", wsdlLocation = "file:/C:/Users/B38797/Documents/workspace-spring-tool-suite-4-4.18.1.RELEASE/provisioning/src/main/resources/provisioning.wsdl")
public class ProvisioningService
    extends Service
{

    private final static URL PROVISIONINGSERVICE_WSDL_LOCATION;
    private final static WebServiceException PROVISIONINGSERVICE_EXCEPTION;
    private final static QName PROVISIONINGSERVICE_QNAME = new QName("http://www.example.com/provisioning", "ProvisioningService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/B38797/Documents/workspace-spring-tool-suite-4-4.18.1.RELEASE/provisioning/src/main/resources/provisioning.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PROVISIONINGSERVICE_WSDL_LOCATION = url;
        PROVISIONINGSERVICE_EXCEPTION = e;
    }

    public ProvisioningService() {
        super(__getWsdlLocation(), PROVISIONINGSERVICE_QNAME);
    }

    public ProvisioningService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PROVISIONINGSERVICE_QNAME, features);
    }

    public ProvisioningService(URL wsdlLocation) {
        super(wsdlLocation, PROVISIONINGSERVICE_QNAME);
    }

    public ProvisioningService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PROVISIONINGSERVICE_QNAME, features);
    }

    public ProvisioningService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProvisioningService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ProvisioningPort
     */
    @WebEndpoint(name = "ProvisioningPort")
    public ProvisioningPort getProvisioningPort() {
        return super.getPort(new QName("http://www.example.com/provisioning", "ProvisioningPort"), ProvisioningPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProvisioningPort
     */
    @WebEndpoint(name = "ProvisioningPort")
    public ProvisioningPort getProvisioningPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.example.com/provisioning", "ProvisioningPort"), ProvisioningPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PROVISIONINGSERVICE_EXCEPTION!= null) {
            throw PROVISIONINGSERVICE_EXCEPTION;
        }
        return PROVISIONINGSERVICE_WSDL_LOCATION;
    }

}
